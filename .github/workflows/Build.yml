name: Build

on: [push, pull_request]

env:
    BUILD_TYPE: Debug
    
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ x86, x64 ]
        os: [ ubuntu-latest, windows-latest ] # [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: '${{ matrix.os }}'
    name: '${{ matrix.os }}-${{ matrix.platform }}: build'
    steps:
    - uses: actions/checkout@v2
    - name: Install Required Software
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install cmake doxygen graphviz
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install cmake doxygen.install graphviz
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
      
    - name: MSBuild prepare for win32
      run: |
         cmd /k "vcvars32.bat"
      if: ${{matrix.os == 'windows-latest' && matrix.platform == 'x86'}} 
      working-directory: "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\"
        
      
    - name: Configure CMake
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cmake -G "Unix Makefiles" -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          
        elif [ "$RUNNER_OS" == "Windows" ]; then
          if [ "${{matrix.platform}}" == "x86" ]; then
            cmake -G "Visual Studio 15 2017" -A x86 -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          elif [ "${{matrix.platform}}" == "x64" ]; then
            cmake -G "Visual Studio 16 2019" -A x64 -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          else
            echo "${{matrix.platform}} not supported"
            exit 1
          fi
          
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
      
    - name: Build
      run: |
        cmake --build build
      shell: bash
      
    - name: Test
      run: |
        ctest -C ${{env.BUILD_TYPE}}
      shell: bash
      working-directory: ${{github.workspace}}/build

  doc:
    strategy:
      fail-fast: false
        
    runs-on: 'ubuntu-latest'
    name: 'Doxygen'
    steps:
    - uses: actions/checkout@v2
    - name: Install Required Software
      run: |
          sudo apt-get update
          sudo apt-get install cmake doxygen graphviz git
          
    - name: Resolve submodule
      run: |
          git submodule init
          git submodule update
      shell: bash
      
    - name: Configure CMake
      run: |
        cmake -B build -Bbuild -DBUILD_TESTING=false -DDOXYGEN_GENERATE=true -Bbuild -DNO_BUILD=true
      shell: bash
      
    - name: Generate document
      run: |
        cmake --build build
      shell: bash
      
    - name: Prepare publishing to GH Page
      run: |
        git clone https://github.com/kms1212/kms1212.github.com
        mkdir -p ./kms1212.github.com/docs/OpenFSL/html
        cp -r ./doc/html/* ./kms1212.github.com/docs/OpenFSL/html
        cd kms1212.github.com
        echo $
      shell: bash
      
    - name: Push to GH Page
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'kms1212.github.com'
        destination-github-username: 'kms1212'
        destination-repository-name: 'kms1212.github.com'
        user-email: kms1212g@gmail.com
        commit-message: OpenFSL Document update
        target-branch: main