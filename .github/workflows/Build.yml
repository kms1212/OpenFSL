name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: Debug
    
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ x86, x64 ]
        os: [ ubuntu-latest, windows-latest ] # [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: '${{ matrix.os }}'
    name: '${{ matrix.os }}-${{ matrix.platform }}: build'
    steps:
    - uses: actions/checkout@v2
      
    - name: Install Required Software
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install cmake doxygen graphviz zip
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install cmake doxygen.install graphviz 7zip
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
      if: ${{matrix.os == 'windows-latest' && matrix.platform == 'x86'}}
      
    - name: Configure CMake
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cmake -G "Unix Makefiles" -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          
        elif [ "$RUNNER_OS" == "Windows" ]; then
          if [ "${{matrix.platform}}" == "x86" ]; then
            cmake -G "Visual Studio 16 2019" -A Win32 -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          elif [ "${{matrix.platform}}" == "x64" ]; then
            cmake -G "Visual Studio 16 2019" -A x64 -S. -Bbuild -DBUILD_TESTING=true -DDOXYGEN_GENERATE=false -Bbuild -DNO_BUILD=false
          else
            echo "${{matrix.platform}} not supported"
            exit 1
          fi
          
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
      
    - name: Build
      run: |
        cmake --build build
      shell: bash
      
    - name: Test
      run: |
        ctest -C ${{env.BUILD_TYPE}}
      shell: bash
      working-directory: ${{github.workspace}}/build